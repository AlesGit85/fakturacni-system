<?php
/**
 * Debug Nette konfigurace
 */

ini_set('display_errors', 1);
error_reporting(E_ALL);

echo "<h1>‚öôÔ∏è Debug Nette konfigurace</h1>";

try {
    // 1. Autoloader
    echo "<h2>1. Autoloader:</h2>";
    require __DIR__ . '/vendor/autoload.php';
    echo "<p>‚úÖ Autoloader naƒçten</p>";
    
    // 2. Kontrola config soubor≈Ø
    echo "<h2>2. Kontrola config soubor≈Ø:</h2>";
    $configFiles = [
        'config/common.neon' => 'Hlavn√≠ konfigurace',
        'config/local.neon' => 'Lok√°ln√≠ konfigurace',
        'config/services.neon' => 'Slu≈æby'
    ];
    
    foreach ($configFiles as $file => $desc) {
        if (file_exists($file)) {
            echo "<p>‚úÖ <strong>$file</strong> ($desc) - " . filesize($file) . " byt≈Ø</p>";
            
            // Uk√°zka obsahu (prvn√≠ 3 ≈ô√°dky)
            $content = file_get_contents($file);
            $lines = explode("\n", $content);
            echo "<details><summary>Prvn√≠ ≈ô√°dky souboru:</summary>";
            echo "<pre>";
            for ($i = 0; $i < min(10, count($lines)); $i++) {
                echo htmlspecialchars($lines[$i]) . "\n";
            }
            echo "</pre></details>";
            
        } else {
            echo "<p>‚ùå <strong>$file</strong> - neexistuje</p>";
        }
    }
    
    // 3. Test vytvo≈ôen√≠ Bootstrap (bez spu≈°tƒõn√≠)
    echo "<h2>3. Test Bootstrap:</h2>";
    $bootstrap = new App\Bootstrap;
    echo "<p>‚úÖ Bootstrap instance vytvo≈ôena</p>";
    
    // 4. Test Configurator (reflection)
    echo "<h2>4. Test Configurator:</h2>";
    $reflection = new ReflectionClass($bootstrap);
    $tempMethod = $reflection->getMethod('bootWebApplication');
    
    // Pokus√≠me se z√≠skat configurator info pomoc√≠ reflection
    try {
        // Zkus√≠me vytvo≈ôit Configurator p≈ô√≠mo
        $configurator = new Nette\Bootstrap\Configurator;
        $configurator->setTempDirectory(__DIR__ . '/temp');
        
        echo "<p>‚úÖ Configurator vytvo≈ôen</p>";
        echo "<p>üìÅ Temp adres√°≈ô: " . __DIR__ . '/temp</p>';
        
        // Test p≈ôid√°n√≠ config soubor≈Ø
        $configDir = __DIR__ . '/config';
        echo "<p>üìÅ Config adres√°≈ô: $configDir</p>";
        
        if (file_exists($configDir . '/common.neon')) {
            echo "<p>‚úÖ P≈ôid√°v√°m common.neon</p>";
            $configurator->addConfig($configDir . '/common.neon');
        }
        
        if (file_exists($configDir . '/services.neon')) {
            echo "<p>‚úÖ P≈ôid√°v√°m services.neon</p>";
            $configurator->addConfig($configDir . '/services.neon');
        }
        
        if (file_exists($configDir . '/local.neon')) {
            echo "<p>‚úÖ P≈ôid√°v√°m local.neon</p>";
            $configurator->addConfig($configDir . '/local.neon');
        }
        
        echo "<p>üîÑ Pokus√≠m se vytvo≈ôit container...</p>";
        $container = $configurator->createContainer();
        echo "<p>‚úÖ Container vytvo≈ôen!</p>";
        
        // Test datab√°zov√© slu≈æby
        echo "<h2>5. Test datab√°zov√© slu≈æby:</h2>";
        $database = $container->getByType(Nette\Database\Explorer::class);
        echo "<p>‚úÖ Database service z√≠sk√°n</p>";
        
        // Test p≈ôipojen√≠
        $connection = $database->getConnection();
        echo "<p>‚úÖ Database connection z√≠sk√°n</p>";
        
        // Test skuteƒçn√©ho dotazu
        $result = $database->query("SELECT 1 as test")->fetch();
        echo "<p>‚úÖ Test dotaz probƒõhl: " . json_encode($result) . "</p>";
        
        echo "<div style='background: #d4edda; padding: 15px; border-radius: 5px; margin: 15px 0;'>";
        echo "<h3>üéâ KONFIGURACE FUNGUJE!</h3>";
        echo "<p>Probl√©m nen√≠ v konfiguraci datab√°ze.</p>";
        echo "<p>Nejsp√≠≈° je probl√©m v cache nebo v nƒõkter√© ƒç√°sti aplikace.</p>";
        echo "</div>";
        
    } catch (Exception $e) {
        echo "<div style='background: #f8d7da; padding: 15px; border-radius: 5px;'>";
        echo "<h3>‚ùå CHYBA V KONFIGURACI:</h3>";
        echo "<p><strong>Typ:</strong> " . get_class($e) . "</p>";
        echo "<p><strong>Zpr√°va:</strong> " . htmlspecialchars($e->getMessage()) . "</p>";
        echo "<p><strong>Soubor:</strong> " . $e->getFile() . " (≈ô√°dek " . $e->getLine() . ")</p>";
        echo "<details><summary>Stack trace</summary>";
        echo "<pre>" . htmlspecialchars($e->getTraceAsString()) . "</pre>";
        echo "</details>";
        echo "</div>";
    }
    
} catch (Exception $e) {
    echo "<div style='background: #f8d7da; padding: 15px; border-radius: 5px;'>";
    echo "<h3>‚ùå OBECN√Å CHYBA:</h3>";
    echo "<p>" . htmlspecialchars($e->getMessage()) . "</p>";
    echo "</div>";
}

echo "<hr>";
echo "<h2>üßπ Zkuste tak√©:</h2>";
echo "<ul>";
echo "<li><a href='clear-cache.php'>Vyƒçistit cache</a> (vytvo≈ô√≠me dal≈°√≠ skript)</li>";
echo "<li><a href='/'>Zkusit hlavn√≠ aplikaci</a></li>";
echo "</ul>";
?>